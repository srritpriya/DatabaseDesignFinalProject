import mysql.connector as conn

mydb = conn.connect(
  host="127.0.0.1",
  user="user1",
  password="password1",
  database="stage_3_dbd"
)

#######################################################################################################

# EXIT MENU

def user_exit():
  user_in = (input("Do you want to go back to the main menu?(Y/N) \n"), )

  if "Y" in user_in or "y" in user_in:
    main_menu()
  elif "N" in user_in or "n" in user_in:
    print("\nShutting down...")
    exit()
  else:
    print("Invalid choice, shutting down...")
    exit()

#######################################################################################################

# QUERY 2

def fun_query1():
  query1 = mydb.cursor()

  price = (input("Enter the minimum price of the drug: \n"), )
  query = "Select pat.Pat_ID, pat.FName, pat.LName, drugs.unit_price AS 'Drug Unit Price', drugs.Description AS 'Drug Name' FROM patients as pat INNER JOIN appointments AS app INNER JOIN invoice AS inv INNER JOIN in_lines AS in_e INNER JOIN drugs ON pat.Pat_ID = app.Pat_ID AND app.App_ID = inv.App_ID AND inv.In_ID = in_e.In_ID AND in_e.Drug_ID = drugs.Drug_ID WHERE drugs.unit_price>= %s ORDER BY drugs.Description"
  query1.execute(query, price)

  if query1.description is None:
    print("No records available")
  else:
    print("\nAvailable record(s):")
    for x in query1:
      print(x)
  print("\n")
  user_exit()
#######################################################################################################

# QUERY 7

def fun_query2():
  query2 = mydb.cursor()

  symp = (input("Enter the required symptom: \n"), )
  query = "SELECT DISTINCT a.Pat_ID, p.FName,P.LName,P.Age FROM appointments AS a, patients AS p WHERE p.Pat_ID=a.Pat_ID AND a.Symptons= %s ORDER BY P.LName,P.Age"
  query2.execute(query, symp)

  if query2.description is None:
    print("No records available")
  else:
    print("\nAvailable record(s):")
    for y in query2:
      print(y)
  print("\n")
  user_exit()
#######################################################################################################

# QUERY 9

def fun_query3():
  query3 = mydb.cursor()

  age = (input("Enter the minimum age of the patient: \n"), )
  query = "SELECT Pat_ID, FName, LName, Email, Gender, Age, inv_count AS 'Count of Invoices' FROM patients AS pat, (SELECT Pat_ID AS ID, COUNT(Pat_ID) AS inv_count	FROM appointments ap INNER JOIN invoice inv	ON ap.App_ID=inv.App_ID	WHERE ap.App_date>='2021-01-01' AND ap.App_date<='2021-12-31' GROUP BY Pat_ID) AS tab WHERE pat.Age>= %s AND pat.Pat_ID = tab.ID"
  query3.execute(query, age)

  if query3.description is None:
    print("\nNo records available")
  else:
    print("\nAvailable record(s):")
    for z in query3:
      print(z)
  print("\n")
  user_exit()
#######################################################################################################

# MAIN UI

def main_menu():
  print("\n")
  print("         CIS-553: Stage 3")
  print("             Main Menu")
  print("\n")
  print("Below are the available options: ")
  print("1: Query to display the patient id, first name, and drug name where the cost of the drug is more than a certain value, sorted by the drug name.")
  print("2: Query to list patients details, filtered by certain symptoms, sorted by the patient's last name and then by their age in ascending order.")
  print("3: Query to count the total number of invoices generated by each patient above a certain age between 2021 and 2022.")
  print("4: Exit program.")
  print("\n")

  user_in = (input("Enter the required option number: \n"),)

  if '1' in user_in:
    fun_query1()
  elif '2' in user_in:
    fun_query2()
  elif '3' in user_in:
    fun_query3()
  elif '4' in user_in:
    print("\nShutting down...")
    exit()
  else:
    print("\nInvalid choice, please try again.")
    main_menu()

main_menu()







